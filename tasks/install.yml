---

- name: remove default packaged docker
  ansible.builtin.package:
    name:
      - docker
      - docker-engine
    state: absent
  when:
    - not (ansible_os_family | lower == 'archlinux' or
           ansible_os_family | lower | replace(' ', '') == 'artixlinux')

- name: install docker
  ansible.builtin.package:
    name: "{{ docker_packages }}"
    state: "{{ docker_state }}"

- name: create docker run configuration
  ansible.builtin.template:
    src: "docker.j2"
    dest: "{{ docker_defaults_directory }}/docker"
    force: true
    owner: root
    group: root
    mode: 0640
  notify:
    - validate config
    - reload docker

- name: ensure containerd is running and enabled on archlinux
  ansible.builtin.service:
    name: containerd
    state: started
    enabled: "{{ docker_service.enable }}"
  when:
    - ansible_os_family | lower == 'archlinux'
    - ansible_service_mgr | lower == 'systemd'

- name: ensure {{ docker_service.name }} is running
  ansible.builtin.service:
    name: "{{ docker_service.name }}"
    state: started
  register: running_service
  ignore_errors: true

- name: daemon start has failed
  when:
    - running_service.failed
  block:
    - name: ensure {{ docker_service.name }} is stopped
      ansible.builtin.service:
        name: "{{ docker_service.name }}"
        state: stopped

    - name: remove broken config to start daemon
      ansible.builtin.file:
        state: absent
        path: /etc/docker/daemon.json

    - name: ensure {{ docker_service.name }} is running
      ansible.builtin.service:
        name: "{{ docker_service.name }}"
        state: started

- name: wait for running docker
  ansible.builtin.wait_for:
    path: /run/docker.pid
    state: present
    delay: 2
    sleep: 2
    msg: Timeout to find file /run/docker.pid

- name: define docker_version
  docker_version:
  register: docker_version

- name: create custom fact file
  bodsch.core.facts:
    name: docker
    facts:
      version:
        docker: "{{ docker_version.versions.docker_version }}"
        api: "{{ docker_version.versions.api_version }}"

...
