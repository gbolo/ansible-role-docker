---

- name: include OS specific configuration ({{ ansible_distribution }} ({{ ansible_os_family }}) {{ ansible_distribution_major_version }})
  include_vars: "{{ lookup('first_found', params) }}"
  vars:
    params:
      paths:
        - "vars"
      files:
        # eg. debian-10 / ubuntu-20.04 / centos-8 / oraclelinux-8
        - "{{ ansible_distribution | lower }}-{{ ansible_distribution_major_version }}.yaml"
        # eg. archlinux-systemd / archlinux-openrc
        - "{{ ansible_distribution | lower }}-{{ ansible_service_mgr | lower }}.yaml"
        # eg. debian / ubuntu / centos / oraclelinux
        - "{{ ansible_distribution | lower }}.yaml"
        # eg. redhat / debian
        - "{{ ansible_os_family | lower }}.yaml"
        - default.yaml
      skip: true

- name: update package cache
  package:
    update_cache: true

- name: install docker dependencies
  package:
    name: "{{ docker_dependencies }}"
    state: present
  when:
    - docker_dependencies is defined
    - docker_dependencies | count > 0

- block:
    - name: detect python3
      stat:
        path: /usr/bin/python3
      register: _stat_present_python3
      changed_when:
        - not _stat_present_python3.stat.exists

    - name: set ansible_python_interpreter for python3
      set_fact:
        ansible_python_interpreter: /usr/bin/python3
      when:
        - ansible_python.version.major == 2
        - _stat_present_python3.stat.exists

    - name: gathering facts now
      setup:
  when:
    - ansible_os_family | lower == 'debian' or
      ansible_distribution | lower == 'amazon'

- name: create requirements.txt
  template:
    src: requirements.txt.j2
    dest: /tmp/docker-requirements.txt
    mode: 0660

- name: install docker python packages
  pip:
    executable: pip3
    requirements: /tmp/docker-requirements.txt
    state: present
  ignore_errors: true
  register: pip_install

- name: merge docker_compose between defaults and custom
  set_fact:
    docker_compose: "{{ docker_compose_defaults |
      combine( docker_compose, recursive=True ) }}"

- name: detect installed docker_compose
  stat:
    path: "/usr/local/bin/docker-compose-{{ docker_compose.version }}"
  register: stat_docker_compose_binary
  when:
    - docker_compose is defined
    - docker_compose.install is defined
    - docker_compose.install

...
