---

name: CI

on:
  push:
    branches:
      - master
  pull_request:
  schedule:
    - cron: "0 2 * * 0"

defaults:
  run:
    working-directory: 'ansible-role-docker'

jobs:
  lint:
    name: linting
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: lint
        uses: docker://ghcr.io/github/super-linter:slim-v4
        env:
          # DEFAULT_BRANCH: master
          GITHUB_TOKEN: ${{ secrets.GH_REGISTRY_TOKEN }}
          VALIDATE_ALL_CODEBASE: true
          VALIDATE_ANSIBLE: true
          VALIDATE_MARKDOWN: true
          VALIDATE_YAML: true

  test:
    name: "${{ matrix.image }} / python: ${{ matrix.python-version }}, ansible: ${{ matrix.ansible-version }}"
    needs:
      - lint
    runs-on: ubuntu-18.04
    strategy:
      fail-fast: false
      matrix:
        image:
          - debian:9
          - debian:10
          - ubuntu:18.04
          - ubuntu:20.04
          - centos:8
          - oraclelinux:8
          - archlinux:latest
        python-version:
          - '3.8'
          - '3.9'
        ansible-version:
          - '2.9'
          - '2.10'

    steps:
      - name: check out the codebase.
        uses: actions/checkout@v2
        with:
          path: 'ansible-role-docker'

      - name: set up python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r test-requirements.txt

      - name: test with tox
        run: |
          tox -e py$(printf "${{ matrix.python-version }}" | tr -d '.')-ansible$(printf "${{ matrix.ansible-version }}" | tr -d '.') -- molecule test
        env:
          PY_COLORS: '1'
          ANSIBLE_FORCE_COLOR: '1'
          DISTRIBUTION: ${{ matrix.image }}

  publish:
    if: github.ref == 'refs/heads/master'
    needs:
      - test
    runs-on: ubuntu-18.04
    steps:
      - name: galaxy
        uses: robertdebock/galaxy-action@1.1.0
        with:
          galaxy_api_key: ${{ secrets.galaxy_api_key }}
